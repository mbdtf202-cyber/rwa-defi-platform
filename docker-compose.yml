version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rwa-postgres
    environment:
      POSTGRES_USER: rwa_user
      POSTGRES_PASSWORD: rwa_password
      POSTGRES_DB: rwa_defi
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rwa-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rwa-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rwa-network

  # Backend Service
  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    container_name: rwa-backend
    environment:
      DATABASE_URL: postgresql://rwa_user:rwa_password@postgres:5432/rwa_defi
      REDIS_URL: redis://redis:6379
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    networks:
      - rwa-network
    command: npm run dev

  # ML Services
  ml-services:
    build:
      context: ./packages/ml-services
      dockerfile: Dockerfile
    container_name: rwa-ml-services
    environment:
      DATABASE_URL: postgresql://rwa_user:rwa_password@postgres:5432/rwa_defi
      REDIS_URL: redis://redis:6379
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./packages/ml-services:/app
    networks:
      - rwa-network
    command: python main.py

  # Frontend
  frontend:
    build:
      context: ./rwa-defi-platform
      dockerfile: Dockerfile
    container_name: rwa-frontend
    environment:
      VITE_API_URL: http://localhost:3000/api/v1
      VITE_ML_API_URL: http://localhost:8000/api/v1
    ports:
      - "5173:5173"
    volumes:
      - ./rwa-defi-platform:/app
      - /app/node_modules
    networks:
      - rwa-network
    command: npm run dev

  # Hardhat Node (Local Blockchain)
  hardhat:
    build:
      context: ./packages/contracts
      dockerfile: Dockerfile
    container_name: rwa-hardhat
    ports:
      - "8545:8545"
    volumes:
      - ./packages/contracts:/app
      - /app/node_modules
    networks:
      - rwa-network
    command: npx hardhat node

  # IPFS Node
  ipfs:
    image: ipfs/kubo:latest
    container_name: rwa-ipfs
    ports:
      - "4001:4001"
      - "5001:5001"
      - "8080:8080"
    volumes:
      - ipfs_data:/data/ipfs
    networks:
      - rwa-network

  # Prometheus (Monitoring)
  prometheus:
    image: prom/prometheus:latest
    container_name: rwa-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - rwa-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  # Grafana (Visualization)
  grafana:
    image: grafana/grafana:latest
    container_name: rwa-grafana
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - rwa-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  ipfs_data:
  prometheus_data:
  grafana_data:

networks:
  rwa-network:
    driver: bridge
