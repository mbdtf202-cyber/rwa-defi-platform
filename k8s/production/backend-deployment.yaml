apiVersion: v1
kind: Namespace
metadata:
  name: rwa-platform-prod
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-config
  namespace: rwa-platform-prod
data:
  NODE_ENV: "production"
  PORT: "3000"
  LOG_LEVEL: "info"
---
apiVersion: v1
kind: Secret
metadata:
  name: backend-secrets
  namespace: rwa-platform-prod
type: Opaque
stringData:
  DATABASE_URL: "postgresql://user:password@postgres:5432/rwa_platform"
  REDIS_URL: "redis://redis:6379"
  JWT_SECRET: "your-jwt-secret-here"
  JWT_REFRESH_SECRET: "your-jwt-refresh-secret-here"
  ENCRYPTION_KEY: "your-encryption-key-here"
  ONFIDO_API_KEY: "your-onfido-api-key"
  STRIPE_SECRET_KEY: "your-stripe-secret-key"
  IPFS_PROJECT_ID: "your-ipfs-project-id"
  IPFS_PROJECT_SECRET: "your-ipfs-project-secret"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rwa-backend
  namespace: rwa-platform-prod
  labels:
    app: rwa-backend
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: rwa-backend
  template:
    metadata:
      labels:
        app: rwa-backend
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: rwa-platform/backend:1.0.0
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: NODE_ENV
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: backend-config
              key: PORT
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: REDIS_URL
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: JWT_SECRET
        - name: JWT_REFRESH_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: JWT_REFRESH_SECRET
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: ENCRYPTION_KEY
        - name: ONFIDO_API_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: ONFIDO_API_KEY
        - name: STRIPE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: STRIPE_SECRET_KEY
        - name: IPFS_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: IPFS_PROJECT_ID
        - name: IPFS_PROJECT_SECRET
          valueFrom:
            secretKeyRef:
              name: backend-secrets
              key: IPFS_PROJECT_SECRET
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
---
apiVersion: v1
kind: Service
metadata:
  name: rwa-backend-service
  namespace: rwa-platform-prod
  labels:
    app: rwa-backend
spec:
  type: ClusterIP
  selector:
    app: rwa-backend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
    name: http
  sessionAffinity: ClientIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rwa-backend-hpa
  namespace: rwa-platform-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rwa-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 30
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: rwa-backend-pdb
  namespace: rwa-platform-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: rwa-backend
